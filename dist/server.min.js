"use strict";var express=require("express"),mongoose=require("mongoose"),bodyParser=require("body-parser"),cors=require("cors"),multer=require("multer"),dotenv=require("dotenv"),path=require("path");dotenv.config();var app=express(),port=process.env.PORT||3e3;app.use(cors()),app.use(bodyParser.json());var storage=multer.diskStorage({destination:function(e,r,t){t(null,"uploads/")},filename:function(e,r,t){t(null,Date.now()+"-"+r.originalname)}}),upload=multer({storage:storage});app.use(express.static(path.join(__dirname,"public"))),mongoose.connect(process.env.MONGODB_URI,{useNewUrlParser:!0,useUnifiedTopology:!0}).then(function(){return console.log("MongoDB connected")}).catch(function(e){return console.log("Error connecting to MongoDB:",e)});var User=mongoose.model("User",new mongoose.Schema({username:{type:String,required:!0,unique:!0},status:{type:String,default:"active"}})),Message=mongoose.model("Message",new mongoose.Schema({user:{type:String,required:!0},text:{type:String},file:{type:String},time:{type:Date,default:Date.now},isPrivate:{type:Boolean,default:!1},toUser:{type:String}})),FriendRequest=mongoose.model("FriendRequest",new mongoose.Schema({sender:{type:String,required:!0},receiver:{type:String,required:!0},status:{type:String,enum:["pending","accepted","rejected"],default:"pending"},sentAt:{type:Date,default:Date.now}}));app.post("/register",function(r,t){var n,s;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return n=r.body.username,e.prev=1,s=new User({username:n}),e.next=5,regeneratorRuntime.awrap(s.save());case 5:t.status(200).send({message:"User registered successfully!"}),e.next=11;break;case 8:e.prev=8,e.t0=e.catch(1),t.status(400).send({message:"Error registering user",error:e.t0});case 11:case"end":return e.stop()}},null,null,[[1,8]])}),app.get("/users",function(e,r){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(User.find({status:"active"}));case 3:t=e.sent,r.json(t),e.next=10;break;case 7:e.prev=7,e.t0=e.catch(0),r.status(500).send({message:"Error fetching users",error:e.t0});case 10:case"end":return e.stop()}},null,null,[[0,7]])}),app.post("/send-friend-request",function(r,t){var n,s,a,o;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return n=r.body,s=n.sender,a=n.receiver,e.prev=1,e.next=4,regeneratorRuntime.awrap(FriendRequest.findOne({sender:s,receiver:a,status:{$in:["pending","accepted"]}}));case 4:if(e.sent)return e.abrupt("return",t.status(400).send({message:"Friend request already sent or accepted."}));e.next=7;break;case 7:return o=new FriendRequest({sender:s,receiver:a}),e.next=10,regeneratorRuntime.awrap(o.save());case 10:t.status(200).send({message:"Friend request sent successfully!"}),e.next=16;break;case 13:e.prev=13,e.t0=e.catch(1),t.status(500).send({message:"Error sending friend request",error:e.t0});case 16:case"end":return e.stop()}},null,null,[[1,13]])}),app.post("/accept-friend-request",function(r,t){var n,s,a;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return n=r.body,s=n.sender,a=n.receiver,e.prev=1,e.next=4,regeneratorRuntime.awrap(FriendRequest.findOneAndUpdate({sender:s,receiver:a,status:"pending"},{status:"accepted"},{new:!0}));case 4:if(e.sent){e.next=7;break}return e.abrupt("return",t.status(400).send({message:"No pending request found."}));case 7:t.status(200).send({message:"Friend request accepted!"}),e.next=13;break;case 10:e.prev=10,e.t0=e.catch(1),t.status(500).send({message:"Error accepting friend request",error:e.t0});case 13:case"end":return e.stop()}},null,null,[[1,10]])}),app.post("/send-message",upload.single("file"),function(r,t){var n,s,a,o,u,i,c;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return n=r.body,s=n.user,a=n.text,o=n.toUser,u=n.isPrivate,i=r.file?"/uploads/".concat(r.file.filename):null,e.prev=2,c=new Message({user:s,text:a,file:i,isPrivate:u,toUser:o}),e.next=6,regeneratorRuntime.awrap(c.save());case 6:t.status(200).send({message:"Message sent successfully!"}),e.next=12;break;case 9:e.prev=9,e.t0=e.catch(2),t.status(500).send({message:"Error sending message",error:e.t0});case 12:case"end":return e.stop()}},null,null,[[2,9]])}),app.get("/messages",function(r,t){var n,s;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(n=r.query.username,e.prev=1,n)return e.next=5,regeneratorRuntime.awrap(Message.find({$or:[{isPrivate:!1},{toUser:n}]}).sort({time:1}));e.next=8;break;case 5:s=e.sent,e.next=11;break;case 8:return e.next=10,regeneratorRuntime.awrap(Message.find().sort({time:1}));case 10:s=e.sent;case 11:t.json(s),e.next=17;break;case 14:e.prev=14,e.t0=e.catch(1),t.status(500).send({message:"Error fetching messages",error:e.t0});case 17:case"end":return e.stop()}},null,null,[[1,14]])}),app.use("/uploads",express.static(path.join(__dirname,"uploads"))),app.listen(port,function(){console.log("Server running on port ".concat(port))});
//# sourceMappingURL=server.min.js.map
